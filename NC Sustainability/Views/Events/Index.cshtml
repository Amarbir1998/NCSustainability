@model IEnumerable<NCSustainability.Models.Event>

@{
    ViewData["Title"] = "Index";
}

<h1>Events</h1>
@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
}
<table class="table">
    <colgroup>
        <col span="1" />
        <col width="300" , span="1" />
        <col span="1" />
    </colgroup>
    <thead>
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Edate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        if (item.imageContent != null && item.imageMimeType.Contains("image"))
                        {
                            string imageBase64 = Convert.ToBase64String(item.imageContent);
                            string imageSrc = string.Format("data:" + item.imageMimeType + ";base64,{0}", imageBase64);
                            <img src="@imageSrc" alt="Profile Picture of @item.Title" title="Profile Picture of @item.Title" style="max-height: 100px; max-width: 120px" class="img-fluid rounded" />
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Edate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventDescription)
                </td>
                @*<td>
                    @{
                        int specCount = item.EventDescription.Length;
                        if (specCount > 0)
                        {
                                string firstSpec = item.EventDescription.Substring(0,25);
                            if (specCount > 25)
                            {
                                string specList = item.EventDescription;
                                    

                                <a tabindex="0" class="text-body" role="button" data-toggle="popover"
                                  data-trigger="focus" title="@item.EventDescription" data-placement="bottom" data-content="@specList">@firstSpec ... <span class="badge badge-info">See more</span></a>
                            }
                            else
                            {
                                @firstSpec
                            }
                        }
                    }
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.EventCategory.EventCategoryName)
                </td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {

                        <a asp-action="Edit" class="btn btn-primary" asp-route-id="@item.ID">Edit</a>
                    }

                    <a asp-action="Details" class="btn btn-primary" asp-route-id="@item.ID">Details</a>

                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Delete" class="btn btn-primary" asp-route-id="@item.ID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="popover"]').popover();
        });

    </script>
}